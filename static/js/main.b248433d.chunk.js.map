{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","document","addEventListener","event","setState","key","removeEventListener","className","this","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAEaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,MAFhB,uDAKE,WAA2B,IAAD,OACxBC,SAASC,iBAAiB,SAAS,SAACC,GAClC,EAAKC,SAAS,CAAEJ,WAAYG,EAAME,WAPxC,kCAWE,WAA8B,IAAD,OAC3BJ,SAASK,oBAAoB,SAAS,WACpC,EAAKF,SAAS,CAAEJ,WAAY,YAblC,oBAiBE,WACE,OACE,qBAAKO,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGC,KAAKT,MAAMC,WAAX,mCAC+BQ,KAAKT,MAAMC,WAD1C,KAEG,kCAvBd,GAAyBS,IAAMC,W,MCG/BC,IAASC,OACP,cAAC,EAAD,IACAX,SAASY,eAAe,W","file":"static/js/main.b248433d.chunk.js","sourcesContent":["import React from 'react';\n\nexport class App extends React.Component {\n  state = {\n    pressedKey: null,\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', (event: KeyboardEvent) => {\n      this.setState({ pressedKey: event.key });\n    });\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', () => {\n      this.setState({ pressedKey: null });\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {this.state.pressedKey\n            ? `The last pressed key is [${this.state.pressedKey}]`\n            : 'Nothing was pressed yet'}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}